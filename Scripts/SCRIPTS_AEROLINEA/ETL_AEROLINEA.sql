SET SERVEROUTPUT ON;
----EXTRACCION INCREMENTAL DE VUELOS
CREATE OR REPLACE PROCEDURE P_ETL_VUELOS
AS
    V_FECHA_INICIO DATE;
    V_FECHA_FIN DATE := SYSDATE - 1;
    V_HORA_INICIO DATE := SYSDATE;
BEGIN

    ----VERIFICAMOS LA ULTIMA EXTRACCION REALIZADA
    SELECT MAX(FECHA_PARTIDA) + 1
    INTO V_FECHA_INICIO
    FROM TBL_VUELOS;
        DBMS_OUTPUT.PUT_LINE('1');

    IF (V_FECHA_INICIO IS NULL) THEN
        SELECT MIN(FECHA_PARTIDA)
        INTO V_FECHA_INICIO
        FROM TBL_VUELOS@DB_LINK_AEROLINEA;
                DBMS_OUTPUT.PUT_LINE('2');
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('FECHA INICIO: ' ||V_FECHA_INICIO);
    DBMS_OUTPUT.PUT_LINE('FECHA FINNN: ' ||V_FECHA_FIN);
    
    ----------REALIZAMOS LA EXTRACCION
    WHILE V_FECHA_INICIO <= V_FECHA_FIN LOOP
        
        ------ELIMINAMOS REGISTRO DEL DIA DE HOY;
        DELETE FROM TBL_VUELOS
        WHERE TRUNC(FECHA_PARTIDA) = TRUNC(V_FECHA_INICIO);
    
        INSERT INTO tbl_vuelos (
            id_vuelo,
            aerolinea,
            fecha_partida,
            aeropuerto_partida,
            aeropuerto_llegada,
            numero_vuelo,
            hora_llegada,
            hora_partida,
            gate,
            tipo_vuelo,
            descuento,
            fecha_fin_descuento,
            capacidad_pasajeros,
            modelo_avion,
            lugar_origen,
            lugar_destino,
            distancia
        ) SELECT 
            a.id_vuelo,
            b.aerolinea,
            a.fecha_partida,
            c.aeropuerto,
            cc.aeropuerto,
            a.numero_vuelo,
            a.hora_llegada,
            a.hora_partida,
            a.gate,
            d.id_tipo_vuelo,
            e.descuento,
            e.fecha_fin,
            NULL,
            NULL,
            i.lugar,
            ii.lugar,
            h.distancia
        FROM TBL_VUELOS@DB_LINK_AEROLINEA A
        INNER JOIN TBL_AEROLINEAS@DB_LINK_AEROLINEA B
        ON (A.ID_AEROLINEA = B.ID_AEROLINEA)
        INNER JOIN TBL_AEROPUERTOS@DB_LINK_AEROLINEA C
        ON (A.ID_AEROPUERTO_PARTIDA = C.ID_AEROPUERTO)
        INNER JOIN TBL_AEROPUERTOS@DB_LINK_AEROLINEA CC
        ON (A.ID_AEROPUERTO_LLEGADA = CC.ID_AEROPUERTO)
        INNER JOIN TBL_TIPOS_VUELOS@DB_LINK_AEROLINEA D
        ON (A.ID_TIPO_VUELO = D.ID_TIPO_VUELO)
        LEFT JOIN TBL_OFERTAS_VUELO@DB_LINK_AEROLINEA E
        ON (A.ID_OFERTA = E.ID_OFERTA)
        INNER JOIN TBL_RUTAS@DB_LINK_AEROLINEA H
        ON (A.ID_RUTA = H.ID_RUTA)
        INNER JOIN TBL_LUGARES@DB_LINK_AEROLINEA I
        ON (H.ID_LUGAR_ORIGEN = I.ID_LUGAR)
        INNER JOIN TBL_LUGARES@DB_LINK_AEROLINEA II
        ON (H.ID_LUGAR_DESTINO = II.ID_LUGAR)
        WHERE TRUNC(A.FECHA_PARTIDA) = TRUNC(V_FECHA_INICIO);
            DBMS_OUTPUT.PUT_LINE('3');
        
        COMMIT;
        V_FECHA_INICIO := V_FECHA_INICIO + 1;
    END LOOP;
        DBMS_OUTPUT.PUT_LINE('4');

END;


BEGIN
    P_ETL_VUELOS;
END;

---------------------EXTRACCION VOLATIL DE ASIENTOS
CREATE OR REPLACE PROCEDURE P_ETL_ASIENTOS
AS
BEGIN
    
        INSERT INTO tbl_asientos (
            id_asiento,
            id_vuelo,
            nombre_asiento,
            disponible,
            tipo_asiento,
            precio_base_asiento
        ) SELECT 
            a.id_asiento,
            c.id_vuelo,
            a.nombre_asiento,
            a.disponible,
            b.tipo_asiento,
            b.precio_base
        FROM TBL_ASIENTOS@DB_LINK_AEROLINEA a
        INNER JOIN TBL_TIPO_ASIENTO@DB_LINK_AEROLINEA b
        ON (A.ID_TIPO_ASIENTO = B.ID_TIPO_ASIENTO)
        INNER JOIN TBL_VUELOS@DB_LINK_AEROLINEA c
        ON (A.ID_VUELO = C.ID_VUELO);
        
                DBMS_OUTPUT.PUT_LINE('SE INSERTO');
        COMMIT;
    EXCEPTION 
        WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE('SQLCODE: ' || SQLCODE);
        DBMS_OUTPUT.PUT_LINE('SQLERRM: ' || SQLERRM);
        ROLLBACK; 
END;

BEGIN
    P_ETL_ASIENTOS;
END;




---------------------------------------IGNORAR (PRUEBAS)
SELECT * FROM TBL_VUELOS;  ---2202
SELECT * FROM TBL_ASIENTOS;
SELECT * FROM TBL_VUELOS@DB_LINK_AEROLINEA;  ---2202
SELECT * FROM TBL_FACTURAS@DB_LINK_AEROLINEA;
SELECT * FROM TBL_AVIONES@DB_LINK_AEROLINEA;

SELECT *
FROM TBL_VUELOS@DB_LINK_AEROLINEA C
INNER JOIN TBL_AVIONES@DB_LINK_AEROLINEA A
ON (C.ID_AEROLINEA = A.ID_AEROLINEA)
LEFT JOIN (SELECT DISTINCT(ID_AEROLINEA)
            FROM TBL_AEROLINEAS@DB_LINK_AEROLINEA) B
ON (b.ID_AEROLINEA = a.ID_AEROLINEA)
INNER JOIN TBL_MODELOS_aVIONES@DB_LINK_AEROLINEA D
ON (B.ID_MODELO = D.ID_MODELO);

SELECT *
FROM TBL_AVIONES@DB_LINK_AEROLINEA A
LEFT JOIN (
    SELECT DISTINCT *
    FROM TBL_AEROLINEAS@DB_LINK_AEROLINEA
) B
ON B.ID_AEROLINEA = A.ID_AEROLINEA;

SET SERVEROUTPUT ON;
    SELECT *
    FROM TBL_VUELOS@DB_LINK_AEROLINEA A
    INNER JOIN TBL_AEROLINEAS@DB_LINK_AEROLINEA B
    ON (A.ID_AEROLINEA = B.ID_AEROLINEA)
    INNER JOIN TBL_AEROPUERTOS@DB_LINK_AEROLINEA C
    ON (A.ID_AEROPUERTO_PARTIDA = C.ID_AEROPUERTO)
    INNER JOIN TBL_AEROPUERTOS@DB_LINK_AEROLINEA CC
    ON (A.ID_AEROPUERTO_LLEGADA = CC.ID_AEROPUERTO)
    INNER JOIN TBL_TIPOS_VUELOS@DB_LINK_AEROLINEA D
    ON (A.ID_TIPO_VUELO = D.ID_TIPO_VUELO)
    LEFT JOIN TBL_OFERTAS_VUELO@DB_LINK_AEROLINEA E
    ON (A.ID_OFERTA = E.ID_OFERTA)
    INNER JOIN TBL_RUTAS@DB_LINK_AEROLINEA H
    ON (A.ID_RUTA = H.ID_RUTA)
    INNER JOIN TBL_LUGARES@DB_LINK_AEROLINEA I
    ON (H.ID_LUGAR_ORIGEN = I.ID_LUGAR)
    INNER JOIN TBL_LUGARES@DB_LINK_AEROLINEA II
    ON (H.ID_LUGAR_DESTINO = II.ID_LUGAR);

SELECT MAX(FECHA_PARTIDA) MAYOR, MIN(FECHA_PARTIDA) MENOR FROM TBL_VUELOS@DB_LINK_AEROLINEA; 